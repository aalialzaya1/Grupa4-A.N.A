// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentACar.Models;

namespace RentACar.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190618130624_rentACarMigracija")]
    partial class rentACarMigracija
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RentACar.Models.Grad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.HasKey("Id");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("RentACar.Models.Osoba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojTelefona");

                    b.Property<DateTime>("DatumRodjenja");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<string>("Ime");

                    b.Property<string>("KorisnickoIme");

                    b.Property<string>("Sifra");

                    b.HasKey("Id");

                    b.ToTable("Osoba");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Osoba");
                });

            modelBuilder.Entity("RentACar.Models.Racun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdMenadzera");

                    b.Property<double>("Iznos");

                    b.Property<int?>("RezervacijaId");

                    b.Property<int>("SifraRacuna");

                    b.HasKey("Id");

                    b.HasIndex("RezervacijaId");

                    b.ToTable("Racun");
                });

            modelBuilder.Entity("RentACar.Models.Rezervacija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojDana");

                    b.Property<DateTime>("DatumPreuzimanja");

                    b.Property<DateTime>("DatumVracanja");

                    b.Property<int?>("GradPreuzimanjaId");

                    b.Property<int?>("GradVracanjaId");

                    b.Property<int?>("KlijentId");

                    b.Property<int>("NacinPlacanja1");

                    b.Property<int?>("Voziloid");

                    b.HasKey("Id");

                    b.HasIndex("GradPreuzimanjaId");

                    b.HasIndex("GradVracanjaId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("Voziloid");

                    b.ToTable("Rezervacija");
                });

            modelBuilder.Entity("RentACar.Models.Vozilo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojSjedista");

                    b.Property<int>("BrojVrata");

                    b.Property<bool>("Dostupnost");

                    b.Property<int>("Fotografija");

                    b.Property<string>("Marka");

                    b.Property<string>("Naziv");

                    b.Property<double>("OsnovnaCijena");

                    b.Property<int>("Transmisija1");

                    b.Property<int>("VrstaGoriva1");

                    b.HasKey("id");

                    b.ToTable("Vozilo");
                });

            modelBuilder.Entity("RentACar.Models.Klijent", b =>
                {
                    b.HasBaseType("RentACar.Models.Osoba");


                    b.ToTable("Klijent");

                    b.HasDiscriminator().HasValue("Klijent");
                });

            modelBuilder.Entity("RentACar.Models.Racun", b =>
                {
                    b.HasOne("RentACar.Models.Rezervacija", "Rezervacija")
                        .WithMany()
                        .HasForeignKey("RezervacijaId");
                });

            modelBuilder.Entity("RentACar.Models.Rezervacija", b =>
                {
                    b.HasOne("RentACar.Models.Grad", "GradPreuzimanja")
                        .WithMany()
                        .HasForeignKey("GradPreuzimanjaId");

                    b.HasOne("RentACar.Models.Grad", "GradVracanja")
                        .WithMany()
                        .HasForeignKey("GradVracanjaId");

                    b.HasOne("RentACar.Models.Klijent", "Klijent")
                        .WithMany()
                        .HasForeignKey("KlijentId");

                    b.HasOne("RentACar.Models.Vozilo", "Vozilo")
                        .WithMany()
                        .HasForeignKey("Voziloid");
                });
#pragma warning restore 612, 618
        }
    }
}
